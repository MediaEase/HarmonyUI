name: Update Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'

jobs:
  documentation-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify 'docs-needed' Label
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v5
        with:
          script: |
            const payload = context.payload.pull_request
            const labelFound = payload.labels.some(label => label.name === 'docs-needed');
            if (labelFound) {
              core.setFailed("Pull request has 'docs-needed' label.");
            }

      - name: Setup Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Python Dependencies
        run: pip install pyyaml

      - name: Clone Documentation Repository
        run: |
          git clone https://github.com/MediaEase/docs.git tmp/

      - name: Format API Specifications
        run: |
          python .github/scripts/openapi.py

      - name: Format README Files
        run: |
          python .github/scripts/mkdocs.py

      - name: Lint and Split OpenAPI Specs with Redocly
        uses: seeebiii/redoc-cli-github-action@v10
        with:
          args: |
            lint ./openapi-redoc.yaml
            split ./openapi-redoc.yaml --outDir tmp/api-docs/openapi
            bundle ./openapi-redoc.yaml --output tmp/docs/api/dist.json

      - name: Update Documentation with READMEs
        run: |
          rm -rf tmp/docs/harmonyui
          mkdir -p tmp/docs/harmonyui
          cp -pR docs/*.md tmp/docs/harmonyui/
          cp README.md tmp/docs/harmonyui/

      - name: Check for Documentation Changes
        id: check_changes
        run: |
          cd tmp/
          git add .
          if git diff --staged --quiet; then
            echo "No changes to documentation. Exiting workflow."
            exit 0
          fi

      - name: Commit and Push Documentation Changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.check_changes.outputs.changes == 'true'
        run: |
          echo "Committing and pushing changes."
          cd tmp/
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "docs: update documentation [automated]"
          git push --set-upstream https://x-access-token:${{ secrets.MEDIAEASE_ACCESS_TOKEN }}@github.com/MediaEase/docs HEAD
