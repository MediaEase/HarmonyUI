name: Create Release and Update Frontend

on:
  push:
    branches:
      - main
      - develop
  pull_request_target:
    types: [closed]
    branches:
      - main
      - develop

jobs:
  create_release:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Git
        id: git-config
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Run release script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          DEVELOP_BRANCH: develop
          # PRERELEASE_IDENTIFIER: 'alpha'
          PRERELEASE_REPO: 'MediaEase/MediaEase'
          PRERELEASE_FILE: 'prerelease_identifier.txt'
        run: |
          chmod +x .github/scripts/create-release.sh
          bash .github/scripts/create-release.sh
          
  update_submodule:
    needs: create_release
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release version of MediaEase/frontend
        run: echo "HARMONYUI_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV

      - name: Repository Dispatch for HarmonyUI
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.MEDIAEASE_ACCESS_TOKEN }}
          repository: MediaEase/MediaEase
          event-type: harmonyui-release
          client-payload: '{"submodule": "HarmonyUI", "ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "version": "${{ env.HARMONYUI_VERSION }}"}'
